#!/bin/bash
#fix apt bug with adding sources
mv /etc/apt/sources.list /etc/apt/sources.list.bak
curl -L -o /etc/apt/sources.list https://raw.githubusercontent.com/sael-you/Roger_Full_deployment/master/config/sources.list

#lunch an update/upgrade and log everything in /var/log/update_log
curl -L -o /home/roger/update_log https://raw.githubusercontent.com/sael-you/Roger_Full_deployment/master/roger_scripts/update_log; chmod +x /$HOME/update_log; /bin/bash /home/roger/update_log

#script for monitoring crontab
curl -L -o /home/roger/cronalert https://raw.githubusercontent.com/sael-you/Roger_Full_deployment/master/roger_scripts/cronalert; chmod +x /$HOME/cronalert; /bim/bash /home/roger/cronalert

#set ssh configuration
mkdir /home/roger/.ssh
curl -L -o /home/roger/.ssh/authorized_keys https://raw.githubusercontent.com/sael-you/Roger_Full_deployment/master/config/id_rsa.pub;
curl -L -o /etc/ssh/sshd_config https://raw.githubusercontent.com/sael-you/Roger_Full_deployment/master/config/sshd_config;
service ssh restart

#install apache2
apt -y install apache2
rm -rf /etc/apache2/apache2.conf
curl -L -o /etc/apache2/apache2.conf https://raw.githubusercontent.com/sael-you/Roger_Full_deployment/master/apache2/apache2.conf;
rm -rf /etc/apache2/sites-enabled/*
curl -L -o /etc/apache2/sites-enabled/ https://raw.githubusercontent.com/sael-you/Roger_Full_deployment/master/apache2/sites-enabled/roger.conf;
rm -rf /etc/apache2/sites-available/*
curl -L -o /etc/apache2/sites-available/roger.conf  https://raw.githubusercontent.com/sael-you/Roger_Full_deployment/master/apache2/sites-available/roger.conf;
curl -L -o /etc/apache2/sites-available/roger-ssl.conf  https://raw.githubusercontent.com/sael-you/Roger_Full_deployment/master/apache2/sites-available/roger-ssl.conf;
curl -L -o /etc/apache2/conf-available/ssl-params.conf  https://raw.githubusercontent.com/sael-you/Roger_Full_deployment/master/apache2/ssl-params.conf;

#creat website repository for further deployment
cd /var
mkdir repo
cd repo
mkdir rogersite.git
cd rogersite.git
git init --bare
cd hooks
echo '#!/bin/sh
git --work-tree=/var/www/html/ --git-dir=/var/repo/rogersite.git checkout -f' > post-receive
chmod +x post-receive
chmod 777 -R /var/repo
chmod 777 -R /var/www
rm -rf /var/www/html/index.html
git clone https://github.com/sael-you/roger_website.git /var/www/html/

#generate ssl certificate
sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -subj "/C=MR/ST=KHOURIBGA/O=1337/OU=roger" -keyout /etc/ssl/private/apache-selfsigned.key -out /etc/ssl/certs/apache-selfsigned.crt
sudo a2enmod ssl
sudo a2enmod headers
sudo a2ensite roger-ssl.conf
sudo a2ensite roger.conf
sudo a2enconf ssl-params.conf
systemctl reload apache2

#install mailutils and postfix
debconf-set-selections <<< "postfix postfix/mailname string your.hostname.com"
debconf-set-selections <<< "postfix postfix/main_mailer_type string 'Internet Site'"
apt-get install -y mailutils

# flush everything
iptables -F
iptables -X
iptables -Z
#set drop policy
iptables -P INPUT DROP
iptables -P FORWARD DROP
iptables -P OUTPUT DROP
#set limit connections
iptables -A INPUT -p tcp --syn --dport 80 -m connlimit --connlimit-above 15 -j REJECT --reject-with tcp-reset  
iptables -A INPUT -p tcp --syn --dport 443 -m connlimit --connlimit-above 15 -j REJECT --reject-with tcp-reset  
# drop all invalid packets
iptables -A INPUT -m state --state INVALID -j DROP
iptables -A OUTPUT -m state --state INVALID -j DROP
iptables -A FORWARD -m state --state INVALID -j DROP
# allow established
iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
# allow loopback (localhost)
iptables -A INPUT -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT
# allow ping
iptables -t filter -A INPUT -p icmp -j ACCEPT
iptables -t filter -A OUTPUT -p icmp -j ACCEPT
# allow DNS
iptables -A OUTPUT -p tcp --dport 80 -m state --state NEW -j ACCEPT
iptables -A OUTPUT -p tcp --dport 53 -m state --state NEW -j ACCEPT
iptables -A OUTPUT -p udp --dport 53 -m state --state NEW -j ACCEPT
# allow smtp
iptables -t filter -A INPUT -p tcp --dport 25 -j ACCEPT
iptables -t filter -A OUTPUT -p tcp --dport 25 -j ACCEPT
# allow ssh
iptables -A INPUT -p tcp --dport 1337 -j ACCEPT
iptables -I INPUT -p tcp --dport 1337  -m state --state new -m recent --update --seconds 20 --hitcount 5 -j DROP
iptables -I INPUT -p tcp --dport 1337 -m state --state new -m recent --set
# allow http/https
iptables -A INPUT -p tcp --dport 80 -j ACCEPT
iptables -A OUTPUT -p tcp --dport 80 -j ACCEPT
iptables -I INPUT -p tcp --dport 80 -m state --state new -m recent --set
iptables -A INPUT -p tcp --dport 443 -j ACCEPT
iptables -A OUTPUT -p tcp --dport 443 -j ACCEPT
iptables -I INPUT -p tcp --dport 443 -m state --state new -m recent --set
iptables -A INPUT -j DROP

#install iptables_persistent
echo iptables-persistent iptables-persistent/autosave_v4 boolean true | sudo debconf-set-selections
echo iptables-persistent iptables-persistent/autosave_v6 boolean true | sudo debconf-set-selections
apt -y install iptables-persistent
service netfilter-persistent start
iptables-save > /etc/iptables/rules.v4

#set static ip mask /30
curl -L -o /etc/netplan/01-netcfg.yaml https://raw.githubusercontent.com/sael-you/Roger_Full_deployment/master/config/50-cloud-init.yaml;
netplan apply;

#delete crontab
crontab -r

#inserting new cronjobs
(crontab -l 2>/dev/null; echo "@reboot sudo /bin/bash /home/roger/update_log") | crontab -
(crontab -l 2>/dev/null; echo "0 4 * * 4 sudo /bin/bash /home/roger/update_log") | crontab -
(crontab -l 2>/dev/null; echo "0 0 * * * sudo /bin/bash /home/roger/cronalert") | crontab -

#remove unwanted services
systemctl stop ufw
systemctl disable ufw
systemctl stop unattended-upgrades
systemctl disable unattended-upgrades

#finish delete
echo "Roger is ready"
